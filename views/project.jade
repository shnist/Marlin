div#header
	// logo
	img(src='../images/logo_white.png', alt='Marlin Logo', id='logo')
	// form for selecting the different projects
	form(method='post', id='project-selection')
		fieldset
			// the each for the different projects needs to go here
			select(name='projects')
				- each project in projects
					option(value=project)!= project
		input(type='submit', name='project-type', value='Select Project')
div#page
	div#content
		h1= name
		// export data form
		form(method='post', id='export')
			fieldset
				input(type='submit', name='export-project', value='Export all data')
		// latest information
		div#latest-information
			// revision information
			div#commit-context.column
				h2 Commit Information
				ul
					li
						em.highlight Last Commit:&nbsp;
						=statistics[0].revision.commitMessage
					li
						em.highlight Last Committer:&nbsp;
						=statistics[0].revision.committer
					li
						em.highlight Number of Commits:&nbsp;
						=statistics.length
					li
						em.highlight Time of Last Commit:&nbsp;
						=new Date(statistics[0].revision.timeOfCommit).toLocaleDateString() + '&nbsp;' + new Date(statistics[0].revision.timeOfCommit).toLocaleTimeString()
			// javascript performance
			div#javascript-performance.column
				h2 Latest JavaScript Performance
				ul
					li
						em.highlight Page Load Time:&nbsp;
						=statistics[0].javascript.pageLoadingTime + 'ms'
		// tabs
		div#tabs
			ul.tab-navigation
				li
					// first tab, worst peforming graph
					a(href='#tab-one') Worst Performing HTTP Rules
				li
					// best performing http rules
					a(href='#tab-two') Best Performing HTTP Rules
				li
					// js rules tab
					a(href='#tab-three') JavaScript Performance
					
		div#tab-one.tab-page
			h2 Worst Performing HTTP Rules
				a(href='#tabs', class='no-js') Go to navigation
			p The worst performing rules:
			ul
				-each rule in statistics.worstPerforming
					li= rule.name + ': '
						em(class='error')= rule.score
			div#http-chart.graph								
				table
					caption A table to show the worst performing HTTP rules
					thead
						tr
							th Time of Commit
							-each rule in statistics.worstPerforming
								th= rule.name
					tbody
						-each report in statistics
							tr
								td= new Date(report.date).toLocaleDateString() + '&nbsp;' + new Date(report.date).toLocaleTimeString()
								-each rule in statistics.worstPerforming
									td= rule.score

			// form for selecting different rules
			form(method='post', class='rule-options')
				fieldset(class='date collapsible')
					h3.first Change the data range
						span.arrow
					ul
						li
							label(for='http-date-from') From:
							input(type='text', name='http-date-from', id='http-date-from', class='has-date-picker date-from', value='02/01/2012')
						li
							label(for='http-date-to') To:
							input(type='text', name='http-date-to', id='http-date-to', class='has-date-picker date-to', value='02/12/2012')
				fieldset.collapsible
					h3.last Update the rules shown
						span.arrow
					ul
						-each rule in statistics[0].http.rules
							li
								input(type='checkbox', name='rules[]', value=rule.id, id=rule.id + 'Worst')
								label(for=rule.id + 'Worst')= rule.name
				input(type="submit", name="worst-http", value="Update Worst Performing")
		div#tab-two.tab-page
			// http best performance graph
			h2 Best Performing HTTP rules
				a(href='#tabs', class='no-js') Go to navigation
			p The best performing rules:
			ul
				-each rule in statistics.bestPerforming
					li= rule.name + ': '
						em= rule.score
			div#best-http-chart.graph
				table
					caption A table to show the best performing HTTP rules
					thead
						tr
							th Time of Commit
							-each rule, i in statistics.bestPerforming
								-if (i <= 4)
									th= rule.name
					tbody
						-each report in statistics
							tr
								td= new Date(report.date).toLocaleDateString() + '&nbsp;' + new Date(report.date).toLocaleTimeString()
								-each rule, i in statistics.bestPerforming
									-if (i <=  4)
										td= rule.score
			// form for selecting different rules
			form(method='post', class='rule-options')
				fieldset(class='date collapsible')
					h3.first Change the data range
						span.arrow
					ul
						li
							label(for='http-date-from') From:
							input(type='text', name='http-date-from', id='http-date-from', class='has-date-picker date-from', value='02/01/2012')
						li
							label(for='http-date-to') To:
							input(type='text', name='http-date-to', id='http-date-to', class='has-date-picker date-to', value='02/12/2012')
				fieldset.collapsible
					h3.last Update the rules shown
						span.arrow
					ul
						-each rule in statistics[0].http.rules
							li
								input(type='checkbox', name='rules[]', value=rule.id, id=rule.id + 'Best')
								label(for=rule.id + 'Best')= rule.name
				input(type="submit", name="best-http", value="Update Best Performing")
		// tab three - javascript performance
		div#tab-three.tab-page
			// javascript performance
			h2 JavaScript Performance
				a(href='#tabs', class='no-js') Go to navigation
			div#javascript-chart.graph
				table
					caption A table to show JavaScript Performance
					thead
						tr
							th Time of Commit
							-each measurement in statistics[0].javascript
								th= measurement.name
					tbody
						-each report in statistics
							tr
								td= new Date(report.date).toLocaleDateString() + '&nbsp;' + new Date(report.date).toLocaleTimeString()
								-each javascript in report.javascript
									td=javascript.value
			// form for selecting different rules
			form(method='post', class='rule-options')
				fieldset(class='date collapsible')
					h3.first Change the data range
						span.arrow
					ul
						li
							label(for='js-date-from') From:
							input(type='text', name='js-date-from', id='js-date-from', class='has-date-picker date-from', value='02/01/2012')
						li
							label(for='js-date-to') To:
							input(type='text', name='js-date-to', id='js-date-to', class='has-date-picker date-to', value='02/12/2012')
				fieldset.collapsible
					h3.last Update the rules shown
						span.arrow
					ul
						-each javascript in statistics[0].javascript
							li
								input(type='checkbox', name='rules[]', value=javascript.id, id=javascript.id + 'Js')
								label(for=javascript.id + 'Js')= javascript.name
				input(type="submit", name="javascript-graph", value="Update Graph")
								
//include includes/scripts